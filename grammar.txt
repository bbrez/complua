C Grammar

program ::= declaration_list

declaration_list ::= declaration | declaration_list declaration

declaration ::= variable_declaration | function_declaration

variable_declaration ::= type_specifier identifier ';'

function_declaration ::= type_specifier identifier '(' parameter_list ')' compound_statement

parameter_list ::= parameter | parameter_list ',' parameter

parameter ::= type_specifier identifier

compound_statement ::= '{' statement_list '}'

statement_list ::= statement | statement_list statement

statement ::= expression_statement | return_statement | compound_statement

expression_statement ::= expression ';'

return_statement ::= 'return' expression ';'

expression ::= term | expression '+' term | expression '-' term

term ::= factor | term '*' factor | term '/' factor

factor ::= identifier | '(' expression ')' | literal

literal ::= INTEGER | FLOAT | CHAR | STRING

identifier ::= ID

type_specifier ::= 'int' | 'float' | 'char' | 'void'

ID ::= [a-zA-Z_][a-zA-Z0-9_]*

INTEGER ::= [0-9]+

FLOAT ::= [0-9]*\.[0-9]+

CHAR ::= '[a-zA-Z0-9]'

STRING ::= "[a-zA-Z0-9]*"
